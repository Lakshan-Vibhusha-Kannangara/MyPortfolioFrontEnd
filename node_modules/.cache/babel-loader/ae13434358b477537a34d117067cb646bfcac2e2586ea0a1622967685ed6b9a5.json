{"ast":null,"code":"var _jsxFileName = \"/workspaces/MyPortfolioFrontEnd/src/components/Projects.tsx\";\nimport React from 'react';\nimport './Projects.css';\nimport Post from './Post.tsx';\n\n// Define the type for a single project\n\n// Define the type for the data prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects({\n  data\n}) {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  const projects = data.projects;\n  const chunkedProjects = [];\n  for (let i = 0; i < projects.length; i += 3) {\n    chunkedProjects.push(projects.slice(i, i + 3));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4 mb-lg-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"large text-muted mb-3 h1\",\n      style: {\n        padding: 15\n      },\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: chunkedProjects.map((projectChunk, chunkIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: projectChunk.map((project, projectIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 fade-in-animation\",\n          style: {\n            animationDelay: `${chunkIndex * 0.2 + projectIndex * 0.1}s`\n          },\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            image: project.image,\n            name: project.name,\n            information: project.information\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, chunkIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Post","jsxDEV","_jsxDEV","Projects","data","children","fileName","_jsxFileName","lineNumber","columnNumber","projects","chunkedProjects","i","length","push","slice","className","style","padding","map","projectChunk","chunkIndex","project","projectIndex","animationDelay","image","name","information","id","_c","$RefreshReg$"],"sources":["/workspaces/MyPortfolioFrontEnd/src/components/Projects.tsx"],"sourcesContent":["import React from 'react';\nimport './Projects.css';\nimport Post from './Post.tsx';\n\n// Define the type for a single project\ninterface Project {\n  id: number;\n  image: string;\n  name: string;\n  information: string;\n}\n\n// Define the type for the data prop\ninterface ProjectsProps {\n  data: {\n    projects: Project[];\n  };\n}\n\nfunction Projects({ data }: ProjectsProps) {\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  const projects = data.projects;\n  const chunkedProjects: Project[][] = [];\n  for (let i = 0; i < projects.length; i += 3) {\n    chunkedProjects.push(projects.slice(i, i + 3));\n  }\n\n  return (\n    <div className=\"mb-4 mb-lg-0\">\n      <p className=\"large text-muted mb-3 h1\" style={{ padding: 15 }}>\n        My Projects\n      </p>\n      <div style={{ padding: 20 }}>\n        {chunkedProjects.map((projectChunk, chunkIndex) => (\n          <div key={chunkIndex} className=\"row mb-4\">\n            {projectChunk.map((project, projectIndex) => (\n              <div\n                key={project.id}\n                className=\"col-lg-4 fade-in-animation\"\n                style={{\n                  animationDelay: `${chunkIndex * 0.2 + projectIndex * 0.1}s`,\n                }}\n              >\n                <Post\n                  image={project.image}\n                  name={project.name}\n                  information={project.information}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;;AAE7B;;AAQA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,QAAQA,CAAC;EAAEC;AAAoB,CAAC,EAAE;EACzC,IAAI,CAACA,IAAI,EAAE;IACT,oBAAOF,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,QAAQ,GAAGN,IAAI,CAACM,QAAQ;EAC9B,MAAMC,eAA4B,GAAG,EAAE;EACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC3CD,eAAe,CAACG,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;EAChD;EAEA,oBACEV,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAX,QAAA,gBAC3BH,OAAA;MAAGc,SAAS,EAAC,0BAA0B;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAb,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJP,OAAA;MAAKe,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAb,QAAA,EACzBM,eAAe,CAACQ,GAAG,CAAC,CAACC,YAAY,EAAEC,UAAU,kBAC5CnB,OAAA;QAAsBc,SAAS,EAAC,UAAU;QAAAX,QAAA,EACvCe,YAAY,CAACD,GAAG,CAAC,CAACG,OAAO,EAAEC,YAAY,kBACtCrB,OAAA;UAEEc,SAAS,EAAC,4BAA4B;UACtCC,KAAK,EAAE;YACLO,cAAc,EAAG,GAAEH,UAAU,GAAG,GAAG,GAAGE,YAAY,GAAG,GAAI;UAC3D,CAAE;UAAAlB,QAAA,eAEFH,OAAA,CAACF,IAAI;YACHyB,KAAK,EAAEH,OAAO,CAACG,KAAM;YACrBC,IAAI,EAAEJ,OAAO,CAACI,IAAK;YACnBC,WAAW,EAAEL,OAAO,CAACK;UAAY;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC,GAVGa,OAAO,CAACM,EAAE;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWZ,CACN;MAAC,GAfMY,UAAU;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACoB,EAAA,GAvCQ1B,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}