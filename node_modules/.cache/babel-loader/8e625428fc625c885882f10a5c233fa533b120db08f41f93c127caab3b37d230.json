{"ast":null,"code":"var _jsxFileName = \"/workspaces/MyPortfolioFrontEnd/src/components/Courses.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// TechnologyCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechnologyCard = ({\n  technology,\n  progress\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"col-md-6 mb-4\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card h-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row g-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: technology.image,\n          alt: technology.name,\n          className: \"img-fluid p-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: technology.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: technology.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              role: \"progressbar\",\n              style: {\n                width: `${progress}%`\n              },\n              \"aria-valuenow\": progress,\n              \"aria-valuemin\": 0,\n              \"aria-valuemax\": 100,\n              children: [progress, \"% Complete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [\"Last updated \", technology.lastUpdated]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n// Courses component\n_c = TechnologyCard;\nconst Courses = () => {\n  _s();\n  const [technologyData, setTechnologyData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch technology data from the backend\n    fetch('http://3.27.140.194:4002/courses') // Assuming the API endpoint is '/api/technologyData'\n    .then(response => response.json()).then(data => {\n      console.log(\"course data here ....\", data);\n      if (data.success) {\n        // If the response indicates success, set the technologyData state with the technology array\n        setTechnologyData(data.course);\n      } else {\n        console.error('Failed to fetch technology data:', data);\n      }\n      setLoading(false); // Data fetching completed, set loading to false\n    }).catch(error => {\n      console.error('Error fetching technology data:', error);\n      setLoading(false); // Data fetching completed, set loading to false even on error\n    });\n  }, []); // The empty array as the second argument ensures this effect runs once, similar to componentDidMount\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  if (!technologyData || technologyData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No technologies available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '40px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-2 g-4\",\n      children: technologyData.map((tech, index) => /*#__PURE__*/_jsxDEV(TechnologyCard, {\n        technology: {\n          name: tech.name,\n          image: tech.image,\n          description: tech.information,\n          lastUpdated: tech.lastupdated\n        },\n        progress: tech.width\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Courses, \"7cGZEwsB4IRBDSta6mb3LqYDpb4=\");\n_c2 = Courses;\nexport default Courses;\nvar _c, _c2;\n$RefreshReg$(_c, \"TechnologyCard\");\n$RefreshReg$(_c2, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TechnologyCard","technology","progress","className","children","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","description","role","style","width","lastUpdated","_c","Courses","_s","technologyData","setTechnologyData","loading","setLoading","fetch","then","response","json","data","console","log","success","course","error","catch","length","margin","map","tech","index","information","lastupdated","_c2","$RefreshReg$"],"sources":["/workspaces/MyPortfolioFrontEnd/src/components/Courses.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// TechnologyCard component\nconst TechnologyCard: React.FC<{\n  technology: { name: string; image: string; description: string; lastUpdated: string };\n  progress: number;\n}> = ({ technology, progress }) => (\n  <div className=\"col-md-6 mb-4\">\n    <div className=\"card h-100\">\n      <div className=\"row g-0\">\n        <div className=\"col-md-4\">\n          <img src={technology.image} alt={technology.name} className=\"img-fluid p-3\" />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{technology.name}</h5>\n            <p className=\"card-text\">{technology.description}</p>\n            <div className=\"progress mb-3\">\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                style={{ width: `${progress}%` }}\n                aria-valuenow={progress}\n                aria-valuemin={0}\n                aria-valuemax={100}\n              >\n                {progress}% Complete\n              </div>\n            </div>\n            <p className=\"card-text\">\n              <small className=\"text-muted\">Last updated {technology.lastUpdated}</small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n// Courses component\nconst Courses: React.FC = () => {\n  const [technologyData, setTechnologyData] = useState<{\n    name: string;\n    image: string;\n    information: string;\n    lastupdated: string;\n    width: number;\n  }[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch technology data from the backend\n    fetch('http://3.27.140.194:4002/courses') // Assuming the API endpoint is '/api/technologyData'\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"course data here ....\",data)\n        if (data.success) {\n          // If the response indicates success, set the technologyData state with the technology array\n          setTechnologyData(data.course);\n        } else {\n          console.error('Failed to fetch technology data:', data);\n        }\n        setLoading(false); // Data fetching completed, set loading to false\n      })\n      .catch((error) => {\n        console.error('Error fetching technology data:', error);\n        setLoading(false); // Data fetching completed, set loading to false even on error\n      });\n  }, []); // The empty array as the second argument ensures this effect runs once, similar to componentDidMount\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!technologyData || technologyData.length === 0) {\n    return <p>No technologies available.</p>;\n  }\n\n  return (\n    <div style={{ margin: '40px' }}>\n      <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n        {technologyData.map((tech, index) => (\n          <TechnologyCard\n            key={index}\n            technology={{\n              name: tech.name,\n              image: tech.image,\n              description: tech.information,\n              lastUpdated: tech.lastupdated,\n            }}\n            progress={tech.width}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Courses;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}